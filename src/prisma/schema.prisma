generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cart {
  cart_id Int   @id @default(autoincrement())
  user_id Int?
  quality Int
  price   Float
  meal_id Int?
  Meal    Meal? @relation(fields: [meal_id], references: [meal_id], onDelete: NoAction, onUpdate: NoAction)
  User    User? @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model Meal {
  meal_id  Int     @id @default(autoincrement())
  name     String  @db.VarChar(50)
  price    Float
  image    String? @db.VarChar(100)
  quantity Int
  Cart     Cart[]
  Shop     Shop[]
}

model Order {
  order_id    Int       @id @default(autoincrement())
  status      String    @db.VarChar(10)
  created_at  DateTime  @db.Timestamptz(6)
  updated_at  DateTime  @db.Timestamptz(6)
  total       Float
  user_id     Int?
  shipping_id Int?
  payment_id  Int?
  Payment     Payment?  @relation(fields: [payment_id], references: [payment_id], onDelete: NoAction, onUpdate: NoAction)
  Shipping    Shipping? @relation(fields: [shipping_id], references: [shipping_id], onDelete: NoAction, onUpdate: NoAction)
  User        User?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model Payment {
  payment_id Int      @id @default(autoincrement())
  method     String   @db.VarChar(50)
  amount     Float
  created_at DateTime @db.Timestamptz(6)
  Order      Order[]
}

model Review {
  review_id Int    @id @default(autoincrement())
  star      Int
  comment   String @db.VarChar(250)
  Shop      Shop[]
}

model Shipping {
  shipping_id   Int     @id @default(autoincrement())
  status        Int
  shipper_name  String  @db.VarChar(20)
  customer_name String  @db.VarChar(20)
  phone         String  @db.VarChar(20)
  address       String  @db.VarChar(250)
  Order         Order[]
}

model Shop {
  shop_id      Int     @id @default(autoincrement())
  name         String  @db.VarChar(50)
  address      String  @db.VarChar(50)
  open_time    String  @db.VarChar(20)
  close_time   String  @db.VarChar(20)
  is_available Boolean
  user_id      Int?
  review_id    Int?
  meal_id      Int?
  Meal         Meal?   @relation(fields: [meal_id], references: [meal_id], onDelete: NoAction, onUpdate: NoAction)
  Review       Review? @relation(fields: [review_id], references: [review_id], onDelete: NoAction, onUpdate: NoAction)
  User         User?   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  user_id            Int     @id @default(autoincrement())
  username           String  @unique @db.VarChar(20)
  password           String  @db.VarChar(20)
  email              String  @unique @db.VarChar(50)
  phone              String  @unique @db.VarChar(20)
  first_name         String  @db.VarChar(20)
  last_name          String  @db.VarChar(20)
  address            String  @db.VarChar(250)
  role               String? @db.VarChar
  refresh_token      String? @db.VarChar
  verification_token String? @db.VarChar
  Cart               Cart[]
  Order              Order[]
  Shop               Shop[]
}
